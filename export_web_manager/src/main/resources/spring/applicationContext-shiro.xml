<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--1. 创建过滤器工厂，注入SecruityManager安全管理器；bean的id匹配的是web.xml中的过滤器名称。-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--1.1 注入SecruityManager安全管理器，是shiro最最重要的对象。(架构图)-->
        <property name="securityManager" ref="securityManager"/>

        <!--1.2 其他配置-->
        <!--1.2.1 认证失败后，默认跳转到的登陆页面-->
        <property name="loginUrl" value="/login.jsp"/>
        <!--1.2.2 认证成功默认跳转的页面（如果程序有指定，以程序指定为主）-->
        <property name="successUrl" value="/home.jsp"/>
        <!--1.2.3 授权校验失败，默认跳转的页面-->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>

        <!--1.3 过滤器的配置-->
        <!--
            anon  指定放行的资源
            authc 认证的过滤器
            logout 退出过滤器

            /** 匹配多级目录, 比如：/plugins/adminLTE 这个也会匹配
            /*  只匹配一层目录，比如：/plugins 会匹配。 但是/plugins/adminLTE这个就不匹配
            /login*  这里会匹配到/login.do
        -->
        <property name="filterChainDefinitions">
            <value>
                /css/** = anon
                /img/** = anon
                /make/** = anon
                /plugins/** = anon
                /index.jsp = anon
                /login* = anon
                /logout.do = logout
                <!--左边是需要权限校验的资源，右边是访问资源需要的权限-->
                <!--/system/user/list = perms["用户管理"]-->
                /** = authc
            </value>
        </property>
    </bean>

    <!--2. 创建SecruityManager安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--注入自定义的realm，realm是用来访问认证授权数据-->
        <property name="realm" ref="myRealm"/>
    </bean>

    <!--3. 创建自定义的realm，用来访问认证授权数据-->
    <bean id="myRealm" class="cn.itcast.web.realm.AuthRealm">
        <!--注入凭证匹配器，自动对用户输入的密码按照指定的算法加密-->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--4. 创建凭证匹配器，指定自动对用户输入的密码按照md5加密-->
    <!--<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
    </bean>-->
    <!--4. 创建自定义的凭证匹配器，指定加密算法-->
    <bean id="credentialsMatcher" class="cn.itcast.web.realm.CustomCredentialsMatcher"/>

    <!--开启shiro的注解支持-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--depends-on控制对象创建的顺序；首先会先创建depends-on依赖的对象，再创建当前对象。-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>













